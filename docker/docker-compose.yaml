version: "3.9"

services:
  db:
    image: postgres:15.3-alpine
    environment:
      POSTGRES_USER: store
      POSTGRES_PASSWORD: store
      POSTGRES_DB: store
      PGDATA: /data
      TZ: 'GMT+5'
    volumes:
       - ./volumes/pg/data:/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U store"]
      interval: 10s
      timeout: 10s
      retries: 5
    ports:
      - "5432:5432"
  migrate:
    depends_on:
      db:
        condition: service_healthy
    image: migrate/migrate
    volumes:
        - ./migrate:/migrations
    command: ["-path", "/migrations", "-database",  "postgres://store:store@db:5432/store?sslmode=disable", "up", "5"]
  api:
    image: demo_store/api:${API_VERSION}
    build:
      context: ..
      dockerfile: ./docker/api/Dockerfile
      args:
        VERSION: ${API_VERSION}
        NAME: api
    environment:
      TZ: 'Asia/Tashkent'
      DEBUG: 'true'
      VERSION: ${API_VERSION}
      DB_URL: db
      GIN_MODE: release
    ports:
      - 9000:9000
    volumes:
      - ./volumes/log:/app/log
      - ./conf.yaml:/app/conf.yaml
    depends_on:
      db:
        condition: service_healthy
    stop_grace_period: 3s
  site:
    image: demo_store/site:${SITE_VERSION}
    build:
      context: ..
      dockerfile: ./docker/site/Dockerfile
    volumes:
      - ./volumes/target:/app/target
  nginx:
    image: nginx:1.23.4
    ports:
      - "80:80"
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - ./volumes/target:/files/static
    depends_on:
      site:
        condition: service_started
      api:
        condition: service_started

